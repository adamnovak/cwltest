# Stubs for junit_xml (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

unichr = ...  # type: Any

def decode(var, encoding): ...

class TestSuite:
    name = ...  # type: Any
    test_cases = ...  # type: Any
    hostname = ...  # type: Any
    id = ...  # type: Any
    package = ...  # type: Any
    timestamp = ...  # type: Any
    properties = ...  # type: Any
    def __init__(self, name, test_cases: Optional[Any] = ..., hostname: Optional[Any] = ..., id: Optional[Any] = ..., package: Optional[Any] = ..., timestamp: Optional[Any] = ..., properties: Optional[Any] = ...) -> None: ...
    def build_xml_doc(self, encoding: Optional[Any] = ...): ...
    @staticmethod
    def to_xml_string(test_suites, prettyprint: bool = ..., encoding: Optional[Any] = ...): ...
    @staticmethod
    def to_file(file_descriptor, test_suites, prettyprint: bool = ..., encoding: Optional[Any] = ...): ...

class TestCase:
    name = ...  # type: Any
    elapsed_sec = ...  # type: Any
    stdout = ...  # type: Any
    stderr = ...  # type: Any
    classname = ...  # type: Any
    error_message = ...  # type: Any
    error_output = ...  # type: Any
    failure_message = ...  # type: Any
    failure_output = ...  # type: Any
    skipped_message = ...  # type: Any
    skipped_output = ...  # type: Any
    def __init__(self, name, classname: Optional[Any] = ..., elapsed_sec: Optional[Any] = ..., stdout: Optional[Any] = ..., stderr: Optional[Any] = ...) -> None: ...
    def add_error_info(self, message: Optional[Any] = ..., output: Optional[Any] = ...): ...
    def add_failure_info(self, message: Optional[Any] = ..., output: Optional[Any] = ...): ...
    def add_skipped_info(self, message: Optional[Any] = ..., output: Optional[Any] = ...): ...
    def is_failure(self): ...
    def is_error(self): ...
    def is_skipped(self): ...
