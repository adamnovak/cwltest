# Stubs for subprocess32 (Python 2)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class CalledProcessError(Exception):
    returncode: Any = ...
    cmd: Any = ...
    output: Any = ...
    def __init__(self, returncode, cmd, output: Optional[Any] = ...) -> None: ...

class TimeoutExpired(Exception):
    cmd: Any = ...
    timeout: Any = ...
    output: Any = ...
    def __init__(self, cmd, timeout, output: Optional[Any] = ...) -> None: ...

class STARTUPINFO:
    dwFlags: int = ...
    hStdInput: Any = ...
    hStdOutput: Any = ...
    hStdError: Any = ...
    wShowWindow: int = ...

class pywintypes:
    error: Any = ...

PIPE: int
STDOUT: int

def call(*popenargs, **kwargs): ...
def check_call(*popenargs, **kwargs): ...
def check_output(*popenargs, **kwargs): ...

class Popen:
    args: Any = ...
    stdin: Any = ...
    stdout: Any = ...
    stderr: Any = ...
    pid: Any = ...
    returncode: Any = ...
    universal_newlines: Any = ...
    def __init__(self, args, bufsize: int = ..., executable: Optional[Any] = ..., stdin: Optional[Any] = ..., stdout: Optional[Any] = ..., stderr: Optional[Any] = ..., preexec_fn: Optional[Any] = ..., close_fds: Any = ..., shell: bool = ..., cwd: Optional[Any] = ..., env: Optional[Any] = ..., universal_newlines: bool = ..., startupinfo: Optional[Any] = ..., creationflags: int = ..., restore_signals: bool = ..., start_new_session: bool = ..., pass_fds: Any = ...) -> None: ...
    def __enter__(self): ...
    def __exit__(self, type, value, traceback): ...
    def __del__(self, _maxint: Any = ..., _active: Any = ...): ...
    def communicate(self, input: Optional[Any] = ..., timeout: Optional[Any] = ...): ...
    def poll(self) -> int: ...
    def wait(self, timeout: Optional[Any] = ..., endtime: Optional[Any] = ...): ...
    def send_signal(self, sig): ...
    def terminate(self): ...
    def kill(self): ...
